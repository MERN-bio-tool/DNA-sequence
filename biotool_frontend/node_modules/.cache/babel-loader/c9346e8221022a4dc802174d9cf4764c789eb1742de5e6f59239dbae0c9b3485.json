{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Mearn project\\\\biotool_frontend\\\\src\\\\DnaVisualization.js\";\nimport React from 'react';\nimport './DnaVisualization.css'; // Assume we have some basic styling for this\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DnaVisualization = ({\n  dna,\n  complement\n}) => {\n  if (!dna || !complement) return null;\n  const dnaBases = dna.split('');\n  const complementBases = complement.split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dna-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dna-sequence\",\n      children: dnaBases.map((base, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `base ${base}`,\n        children: base\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dna-sequence\",\n      children: complementBases.map((base, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `base ${base}`,\n        children: base\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = DnaVisualization;\nexport default DnaVisualization;\nvar _c;\n$RefreshReg$(_c, \"DnaVisualization\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DnaVisualization","dna","complement","dnaBases","split","complementBases","className","children","map","base","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Mearn project/biotool_frontend/src/DnaVisualization.js"],"sourcesContent":["import React from 'react';\r\nimport './DnaVisualization.css'; // Assume we have some basic styling for this\r\n\r\nconst DnaVisualization = ({ dna, complement }) => {\r\n  if (!dna || !complement) return null;\r\n\r\n  const dnaBases = dna.split('');\r\n  const complementBases = complement.split('');\r\n\r\n  return (\r\n    <div className=\"dna-visualization\">\r\n      <div className=\"dna-sequence\">\r\n        {dnaBases.map((base, index) => (\r\n          <div key={index} className={`base ${base}`}>\r\n            {base}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"dna-sequence\">\r\n        {complementBases.map((base, index) => (\r\n          <div key={index} className={`base ${base}`}>\r\n            {base}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnaVisualization;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAW,CAAC,KAAK;EAChD,IAAI,CAACD,GAAG,IAAI,CAACC,UAAU,EAAE,OAAO,IAAI;EAEpC,MAAMC,QAAQ,GAAGF,GAAG,CAACG,KAAK,CAAC,EAAE,CAAC;EAC9B,MAAMC,eAAe,GAAGH,UAAU,CAACE,KAAK,CAAC,EAAE,CAAC;EAE5C,oBACEL,OAAA;IAAKO,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCR,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BJ,QAAQ,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBX,OAAA;QAAiBO,SAAS,EAAG,QAAOG,IAAK,EAAE;QAAAF,QAAA,EACxCE;MAAI,GADGC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNf,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BF,eAAe,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/BX,OAAA;QAAiBO,SAAS,EAAG,QAAOG,IAAK,EAAE;QAAAF,QAAA,EACxCE;MAAI,GADGC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAxBIf,gBAAgB;AA0BtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}