{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Mearn project\\\\biotool_frontend\\\\src\\\\DnaVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './DnaVisualization.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DnaVisualization = ({\n  dna,\n  complement\n}) => {\n  _s();\n  const [dataSaved, setDataSaved] = useState(false);\n  useEffect(() => {\n    if (dna && complement && !dataSaved) {\n      const saveUserData = async () => {\n        try {\n          const response = await axios.post('http://localhost:3000/api/dna-tools', {\n            dna,\n            complement\n          });\n          console.log('User data saved successfully:', response.data);\n          setDataSaved(true); // Set dataSaved to true after successfully saving data\n        } catch (error) {\n          console.error('Error saving user data:', error);\n        }\n      };\n      saveUserData();\n    }\n  }, [dna, complement, dataSaved]);\n  if (!dna || !complement) return null;\n  const dnaBases = dna.split('');\n  const complementBases = complement.split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dna-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dna-sequence\",\n      children: dnaBases.map((base, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `base ${base}`,\n        children: base\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dna-sequence\",\n      children: complementBases.map((base, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `base ${base}`,\n        children: base\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DnaVisualization, \"ssRvsVvC03HepaGDIjOZYwzDg+M=\");\n_c = DnaVisualization;\nexport default DnaVisualization;\nvar _c;\n$RefreshReg$(_c, \"DnaVisualization\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DnaVisualization","dna","complement","_s","dataSaved","setDataSaved","saveUserData","response","post","console","log","data","error","dnaBases","split","complementBases","className","children","map","base","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Mearn project/biotool_frontend/src/DnaVisualization.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './DnaVisualization.css';\r\n\r\nconst DnaVisualization = ({ dna, complement }) => {\r\n  const [dataSaved, setDataSaved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (dna && complement && !dataSaved) {\r\n      const saveUserData = async () => {\r\n        try {\r\n          const response = await axios.post('http://localhost:3000/api/dna-tools', { dna, complement });\r\n          console.log('User data saved successfully:', response.data);\r\n          setDataSaved(true); // Set dataSaved to true after successfully saving data\r\n        } catch (error) {\r\n          console.error('Error saving user data:', error);\r\n        }\r\n      };\r\n\r\n      saveUserData();\r\n    }\r\n  }, [dna, complement, dataSaved]);\r\n\r\n  if (!dna || !complement) return null;\r\n\r\n  const dnaBases = dna.split('');\r\n  const complementBases = complement.split('');\r\n\r\n  return (\r\n    <div className=\"dna-visualization\">\r\n      <div className=\"dna-sequence\">\r\n        {dnaBases.map((base, index) => (\r\n          <div key={index} className={`base ${base}`}>\r\n            {base}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"dna-sequence\">\r\n        {complementBases.map((base, index) => (\r\n          <div key={index} className={`base ${base}`}>\r\n            {base}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnaVisualization;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,IAAIM,GAAG,IAAIC,UAAU,IAAI,CAACE,SAAS,EAAE;MACnC,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,qCAAqC,EAAE;YAAEP,GAAG;YAAEC;UAAW,CAAC,CAAC;UAC7FO,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,QAAQ,CAACI,IAAI,CAAC;UAC3DN,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF,CAAC;MAEDN,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACL,GAAG,EAAEC,UAAU,EAAEE,SAAS,CAAC,CAAC;EAEhC,IAAI,CAACH,GAAG,IAAI,CAACC,UAAU,EAAE,OAAO,IAAI;EAEpC,MAAMW,QAAQ,GAAGZ,GAAG,CAACa,KAAK,CAAC,EAAE,CAAC;EAC9B,MAAMC,eAAe,GAAGb,UAAU,CAACY,KAAK,CAAC,EAAE,CAAC;EAE5C,oBACEf,OAAA;IAAKiB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChClB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BJ,QAAQ,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBrB,OAAA;QAAiBiB,SAAS,EAAG,QAAOG,IAAK,EAAE;QAAAF,QAAA,EACxCE;MAAI,GADGC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BF,eAAe,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/BrB,OAAA;QAAiBiB,SAAS,EAAG,QAAOG,IAAK,EAAE;QAAAF,QAAA,EACxCE;MAAI,GADGC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1CIH,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}