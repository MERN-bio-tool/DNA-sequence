{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Mearn project\\\\biotool_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Tutorial from './Tutorial';\nimport DnaVisualization from './DnaVisualization';\nimport SequenceAnalysis from './SequenceAnalysis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dna, setDna] = useState('');\n  const [complement, setComplement] = useState('');\n  const [reverseComplement, setReverseComplement] = useState('');\n  const [error, setError] = useState('');\n  const handleDnaChange = e => {\n    setDna(e.target.value.toUpperCase()); // Convert input to uppercase immediately\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!/^[ATCG]*$/.test(dna)) {\n      setError('Invalid DNA sequence. Only A, T, C, and G are allowed.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:3000/api/dna-tools', {\n        dna\n      });\n      setComplement(response.data.complement);\n      setReverseComplement(response.data.reverseComplement);\n    } catch (error) {\n      const errorMessage = error.response && error.response.data.error ? error.response.data.error : 'Failed to calculate complements. Please try again.';\n      setError(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Tutorial, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SequenceAnalysis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DNA Sequence Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dna,\n          onChange: handleDnaChange,\n          placeholder: \"Enter DNA sequence (A, T, C, G)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), complement && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Complementary DNA: \", complement]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this), reverseComplement && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Reverse Complementary DNA: \", reverseComplement]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(DnaVisualization, {\n        dna: dna,\n        complement: complement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pc0C5O2b/JIYV4sccwaGI9/vBqg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Tutorial","DnaVisualization","SequenceAnalysis","jsxDEV","_jsxDEV","App","_s","dna","setDna","complement","setComplement","reverseComplement","setReverseComplement","error","setError","handleDnaChange","e","target","value","toUpperCase","handleSubmit","preventDefault","test","response","post","data","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Mearn project/biotool_frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Tutorial from './Tutorial';\nimport DnaVisualization from './DnaVisualization';\nimport SequenceAnalysis from './SequenceAnalysis';\n\nfunction App() {\n  const [dna, setDna] = useState('');\n  const [complement, setComplement] = useState('');\n  const [reverseComplement, setReverseComplement] = useState('');\n  const [error, setError] = useState('');\n\n  const handleDnaChange = (e) => {\n    setDna(e.target.value.toUpperCase()); // Convert input to uppercase immediately\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!/^[ATCG]*$/.test(dna)) {\n      setError('Invalid DNA sequence. Only A, T, C, and G are allowed.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3000/api/dna-tools', { dna });\n      setComplement(response.data.complement);\n      setReverseComplement(response.data.reverseComplement);\n    } catch (error) {\n      const errorMessage = error.response && error.response.data.error ? error.response.data.error : 'Failed to calculate complements. Please try again.';\n      setError(errorMessage);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Tutorial />\n      <SequenceAnalysis />\n      <header className=\"App-header\">\n        <h1>DNA Sequence Tool</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={dna}\n            onChange={handleDnaChange}\n            placeholder=\"Enter DNA sequence (A, T, C, G)\"\n          />\n          <button type=\"submit\">Calculate</button>\n        </form>\n        {error && <div className=\"error\">{error}</div>}\n        {complement && <div>Complementary DNA: {complement}</div>}\n        {reverseComplement && <div>Reverse Complementary DNA: {reverseComplement}</div>}\n        <DnaVisualization dna={dna} complement={complement} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}